name: Deploy Backend and Frontend

on:
  workflow_run:
    workflows: ["Build Artifacts"]
    types:
      - completed

jobs:
  get_artifacts:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: 'Download version artifact'
      uses: actions/github-script@v6
      with:
        script: |
          let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: context.payload.workflow_run.id,
          });
          let run_number = allArtifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "run_number"
          })[0];
          let download = await github.rest.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: run_number.id,
             archive_format: 'zip',
          });
          let fs = require('fs');
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/run_number.zip`, Buffer.from(download.data));

    - name: Unzip run_number
      run: unzip run_number.zip -d .

    - name: 'Download frontend artifact'
      uses: actions/github-script@v6
      with:
        script: |
          let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: context.payload.workflow_run.id,
          });
    
          let fs = require('fs');
    
          fs.readFile('run_number.txt', 'utf8', (err, data) => {
              if (err) { 
                  console.error('Error reading file:', err);
                  return;
              }
              let run_number = data.trim();
              let version = `1.0.${run_number}`
              let frontend_build = allArtifacts.data.artifacts.find((artifact) => {
                return artifact.name == `frontend-build-${version}`;
              });
    
              console.log('Version:', version);
              console.log('Frontend build:', frontend_build);
    
              if (frontend_build) {
                  github.rest.actions.downloadArtifact({
                     owner: context.repo.owner,
                     repo: context.repo.repo,
                     artifact_id: frontend_build.id,
                     archive_format: 'zip',
                  }).then(download => {
                      fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/frontend-build-${version}.zip`, Buffer.from(download.data));
                  }).catch(error => {
                      console.error('Error downloading artifact:', error);
                  });
              } else {
                  console.error('Frontend build not found for version:', version);
              }
          });

    - name: Generate Frontend Semantic Version
      id: frontend_version
      run: echo "::set-output name=version::1.0.$(cat run_number.txt)"
      
    - name: Unzip Build Folder Artifact
      run: unzip frontend-build-${{ steps.frontend_version.outputs.version }}.zip -d .
    
  deploy-backend:
    needs: get_artifacts
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:    
    - name: Generate Backend Semantic Version
      id: backend_version
      run: echo "::set-output name=version::1.0.$(cat run_number.txt)"
        
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'sum-calculator-web-app'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_008d67032fca4db98179f44c50b0bead }}
        images: 'inspiradevops.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_792aa0849f8d49e0a3ae051198c4fdc4 }}/brenno-app:${{ steps.backend_version.outputs.version }}"'
  
  deploy-frontend:
    needs: get_artifacts
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:     
      - name: Generate Frontend Semantic Version
        id: frontend_version
        run: echo "::set-output name=version::1.0.$(cat run_number.txt)"

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_YELLOW_FOREST_0E6CD570F }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend-build-${{ steps.frontend_version.outputs.version }}"
          output_location: "frontend/build"
          skip_app_build: true
